---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: memcacheds.cache.example.com
spec:
  group: cache.example.com
  names:
    kind: Memcached
    listKind: MemcachedList
    plural: memcacheds
    singular: memcached
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Memcached is the Schema for the memcacheds API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          cacheNamespace:
            description: |-
              CacheNamespace if specified restricts the manager's cache to watch objects in
              the desired namespace Defaults to all namespaces


              Note: If a namespace is specified, controllers can still Watch for a
              cluster-scoped resource (e.g Node).  For namespaced resources the cache
              will only hold objects from the desired namespace.
            type: string
          clusterName:
            type: string
          controller:
            description: |-
              Controller contains global configuration options for controllers
              registered within this manager.
            properties:
              cacheSyncTimeout:
                description: |-
                  CacheSyncTimeout refers to the time limit set to wait for syncing caches.
                  Defaults to 2 minutes if not set.
                format: int64
                type: integer
              groupKindConcurrency:
                additionalProperties:
                  type: integer
                description: |-
                  GroupKindConcurrency is a map from a Kind to the number of concurrent reconciliation
                  allowed for that controller.


                  When a controller is registered within this manager using the builder utilities,
                  users have to specify the type the controller reconciles in the For(...) call.
                  If the object's kind passed matches one of the keys in this map, the concurrency
                  for that controller is set to the number specified.


                  The key is expected to be consistent in form with GroupKind.String(),
                  e.g. ReplicaSet in apps group (regardless of version) would be `ReplicaSet.apps`.
                type: object
              recoverPanic:
                description: RecoverPanic indicates if panics should be recovered.
                type: boolean
            type: object
          gracefulShutDown:
            description: |-
              GracefulShutdownTimeout is the duration given to runnable to stop before the manager actually returns on stop.
              To disable graceful shutdown, set to time.Duration(0)
              To use graceful shutdown without timeout, set to a negative duration, e.G. time.Duration(-1)
              The graceful shutdown is skipped for safety reasons in case the leader election lease is lost.
            type: string
          health:
            description: Health contains the controller health configuration
            properties:
              healthProbeBindAddress:
                description: |-
                  HealthProbeBindAddress is the TCP address that the controller should bind to
                  for serving health probes
                  It can be set to "0" or "" to disable serving the health probe.
                type: string
              livenessEndpointName:
                description: LivenessEndpointName, defaults to "healthz"
                type: string
              readinessEndpointName:
                description: ReadinessEndpointName, defaults to "readyz"
                type: string
            type: object
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          leaderElection:
            description: |-
              LeaderElection is the LeaderElection config to be used when configuring
              the manager.Manager leader election
            properties:
              leaderElect:
                description: |-
                  leaderElect enables a leader election client to gain leadership
                  before executing the main loop. Enable this when running replicated
                  components for high availability.
                type: boolean
              leaseDuration:
                description: |-
                  leaseDuration is the duration that non-leader candidates will wait
                  after observing a leadership renewal until attempting to acquire
                  leadership of a led but unrenewed leader slot. This is effectively the
                  maximum duration that a leader can be stopped before it is replaced
                  by another candidate. This is only applicable if leader election is
                  enabled.
                type: string
              renewDeadline:
                description: |-
                  renewDeadline is the interval between attempts by the acting master to
                  renew a leadership slot before it stops leading. This must be less
                  than or equal to the lease duration. This is only applicable if leader
                  election is enabled.
                type: string
              resourceLock:
                description: |-
                  resourceLock indicates the resource object type that will be used to lock
                  during leader election cycles.
                type: string
              resourceName:
                description: |-
                  resourceName indicates the name of resource object that will be used to lock
                  during leader election cycles.
                type: string
              resourceNamespace:
                description: |-
                  resourceName indicates the namespace of resource object that will be used to lock
                  during leader election cycles.
                type: string
              retryPeriod:
                description: |-
                  retryPeriod is the duration the clients should wait between attempting
                  acquisition and renewal of a leadership. This is only applicable if
                  leader election is enabled.
                type: string
            required:
            - leaderElect
            - leaseDuration
            - renewDeadline
            - resourceLock
            - resourceName
            - resourceNamespace
            - retryPeriod
            type: object
          metadata:
            type: object
          metrics:
            description: Metrics contains the controller metrics configuration
            properties:
              bindAddress:
                description: |-
                  BindAddress is the TCP address that the controller should bind to
                  for serving prometheus metrics.
                  It can be set to "0" to disable the metrics serving.
                type: string
            type: object
          spec:
            description: MemcachedSpec defines the desired state of Memcached
            properties:
              containerPort:
                description: Port defines the port that will be used to init the container
                  with the image
                format: int32
                type: integer
              size:
                description: |-
                  Size defines the number of Memcached instances
                  The following markers will use OpenAPI v3 schema to validate the value
                  More info: https://book.kubebuilder.io/reference/markers/crd-validation.html
                format: int32
                maximum: 3
                minimum: 1
                type: integer
            type: object
          status:
            description: MemcachedStatus defines the observed state of Memcached
            properties:
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
          syncPeriod:
            description: |-
              SyncPeriod determines the minimum frequency at which watched resources are
              reconciled. A lower period will correct entropy more quickly, but reduce
              responsiveness to change if there are many watched resources. Change this
              value only if you know what you are doing. Defaults to 10 hours if unset.
              there will a 10 percent jitter between the SyncPeriod of all controllers
              so that all controllers will not send list requests simultaneously.
            type: string
          webhook:
            description: Webhook contains the controllers webhook configuration
            properties:
              certDir:
                description: |-
                  CertDir is the directory that contains the server key and certificate.
                  if not set, webhook server would look up the server key and certificate in
                  {TempDir}/k8s-webhook-server/serving-certs. The server key and certificate
                  must be named tls.key and tls.crt, respectively.
                type: string
              host:
                description: |-
                  Host is the hostname that the webhook server binds to.
                  It is used to set webhook.Server.Host.
                type: string
              port:
                description: |-
                  Port is the port that the webhook server serves at.
                  It is used to set webhook.Server.Port.
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
